name: Publish Extension

on:
  push:
    branches:
      - main

jobs:
  pyinstaller:
    strategy:
      matrix:
        os: [ubuntu-20.04]

    runs-on: ${{ matrix.os }}

    steps:
      # Install Python requirements and build+upload binaries for each platform

      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Pyinstaller
        run: |
          pip install pyinstaller

      - name: Install Dependencies
        run: |
          pip install -r continuedev/requirements.txt

      - name: Build PyInstaller Executable
        run: pyinstaller run.spec

      - name: Set permissions
        run: |
          chmod 777 dist/run

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}Build
          path: dist/*

  test-and-package:
    needs: pyinstaller
    strategy:
      matrix:
        os: [ubuntu-20.04]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Download corresponding binary artifact for the platform

      - name: Create exe directory
        run: |
          mkdir extension/server/exe

      - name: Download Linux build
        uses: actions/download-artifact@v2
        with:
          name: LinuxBuild
          path: extension/server/exe
        if: matrix.os == 'ubuntu-20.04'

      - name: Set permissions
        shell: bash
        run: |
          chmod -R 777 extension/server/exe

      # Setup Node.js and install dependencies

      - name: Use Node.js 19.0.0
        uses: actions/setup-node@v3
        with:
          node-version: 19.0.0

      - name: Cache extension node_modules
        uses: actions/cache@v2
        with:
          path: extension/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('extension/package-lock.json') }}

      - name: Cache react-app node_modules
        uses: actions/cache@v2
        with:
          path: extension/react-app/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('extension/react-app/package-lock.json') }}

      - name: Install extension Dependencies
        run: |
          cd extension
          npm ci

      - name: Install react-app Dependencies
        run: |
          cd extension/react-app
          npm ci --legacy-peer-deps

      # Run tests

      - name: Prepare the extension
        run: |
          cd extension
          npm run prepackage

      # Create and upload .vsix artifact
      - name: Package the extension
        run: |
          cd extension
          npm run package

      - name: Upload .vsix as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: vsix-artifact
          path: extension/build/*
        if: matrix.os == 'ubuntu-20.04'
